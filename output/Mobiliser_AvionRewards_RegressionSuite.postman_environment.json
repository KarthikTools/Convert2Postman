{
  "id" : "f2b2d368-96c4-44eb-844d-03f1e219c88e",
  "name" : "Mobiliser_AvionRewards_RegressionSuite Environment",
  "values" : [ {
    "key" : "CardNumber",
    "value" : "4519022640754669",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "pvqAnswer",
    "value" : "",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "mfaToken",
    "value" : "",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "projectPath",
    "value" : "/Users/kargee/createXML/samples/Convert2Postman/clean_xml",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "mobile_app_version_ios",
    "value" : "790",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "JSESSIONID",
    "value" : "JSESSIONID=ESC8BF5BFD9020E5E9D356334D6F7AEF",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "mfaSessionId",
    "value" : "",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "deviceId",
    "value" : "",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "LogFileName",
    "value" : "REGRESSION_LOG",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "AccessToken",
    "value" : "${#Project#mfaAuthToken}",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "requestId",
    "value" : "",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "envType",
    "value" : "DEV",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "mfaAuthToken",
    "value" : "",
    "type" : "default",
    "enabled" : true
  }, {
    "key" : "FunctionLibrary",
    "value" : "// Function Library converted from ReadyAPI Groovy script\n// This is an automatically generated JavaScript equivalent\n\nclass FunctionLibrary {\n    constructor(log, context, testRunner) {\n        this.log = log;\n        this.context = context;\n        this.testRunner = testRunner;\n    }\n\n    SignInAvion(cardNumber, env) {\n        try {\n             log.info \"Signing in with card number: ${cardNumber\n        } catch (error) {\n            console.error(`Error in SignInAvion: ${error.message}`);\n            throw error;\n        }\n    }\n\n    MobiliserEnvType() {\n        try {\n             return \"DEV\" \n        } catch (error) {\n            console.error(`Error in MobiliserEnvType: ${error.message}`);\n            throw error;\n        }\n    }\n\n    SetEndpoint(testStep) {\n        try {\n             testStep.testRequest.endpoint = \"https://mobile.sterbcroyalbank.com\" \n        } catch (error) {\n            console.error(`Error in SetEndpoint: ${error.message}`);\n            throw error;\n        }\n    }\n\n    TestCaseFailureCheck(testCase) {\n        try {\n             return true \n        } catch (error) {\n            console.error(`Error in TestCaseFailureCheck: ${error.message}`);\n            throw error;\n        }\n    }\n\n    CreateLogFile(requestedFileName, existingFile = null) {\n        try {\n             def fileName if (existingFile != null && existingFile != \"\") { fileName = existingFile \n        } catch (error) {\n            console.error(`Error in CreateLogFile: ${error.message}`);\n            throw error;\n        }\n    }\n\n}\n\n// Initialize the function library\nconst functionLibrary = new FunctionLibrary(\n    console, // log\n    pm.variables, // context\n    pm.testRunner // testRunner\n);\n\n// Export the library for use in other scripts\npm.functionLibrary = functionLibrary;\n",
    "type" : "string",
    "enabled" : true
  } ]
}