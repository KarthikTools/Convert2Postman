{
  "conversionIssues" : [ "No REST requests found in test case: SetupScriptLibrary", "No REST requests found in test case: TestTemplate", "Unsupported test step type: groovy for step: FunctionLibrary in test case: TestTemplate" ],
  "info" : {
    "name" : "Mobiliser_AvionRewards_RegressionSuite",
    "description" : null,
    "schema" : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id" : null
  },
  "item" : [ {
    "name" : "Interfaces",
    "folder" : true,
    "item" : [ {
      "name" : "Mobiliser",
      "folder" : true,
      "item" : [ {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "POST",
          "url" : {
            "raw" : "https://mobile.sterbcroyalbank.com",
            "protocol" : "https",
            "host" : [ "mobile", "sterbcroyalbank", "com" ]
          }
        }
      }, {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "POST",
          "url" : {
            "raw" : "https://mobile.sterbcroyalbank.com",
            "protocol" : "https",
            "host" : [ "mobile", "sterbcroyalbank", "com" ]
          }
        }
      }, {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "GET",
          "url" : {
            "raw" : "https://mobile.sterbcroyalbank.com",
            "protocol" : "https",
            "host" : [ "mobile", "sterbcroyalbank", "com" ]
          }
        }
      }, {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "POST",
          "url" : {
            "raw" : "https://mobile.sterbcroyalbank.com",
            "protocol" : "https",
            "host" : [ "mobile", "sterbcroyalbank", "com" ]
          }
        }
      }, {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "POST",
          "url" : {
            "raw" : "https://mobile.sterbcroyalbank.com",
            "protocol" : "https",
            "host" : [ "mobile", "sterbcroyalbank", "com" ]
          }
        }
      }, {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "GET",
          "url" : {
            "raw" : "https://mobile.sterbcroyalbank.com",
            "protocol" : "https",
            "host" : [ "mobile", "sterbcroyalbank", "com" ]
          }
        }
      } ]
    }, {
      "name" : "PVQ Encrypt",
      "folder" : true,
      "item" : [ {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "GET",
          "url" : {
            "raw" : "https://crosswordencrypter.apps.cf2.devfg.rbc.com",
            "protocol" : "https",
            "host" : [ "crosswordencrypter", "apps", "cf2", "devfg", "rbc", "com" ]
          }
        }
      } ]
    }, {
      "name" : "MFA",
      "folder" : true,
      "item" : [ {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "POST",
          "url" : {
            "raw" : "https://apigw.istrbc.com",
            "protocol" : "https",
            "host" : [ "apigw", "istrbc", "com" ]
          }
        }
      }, {
        "name" : "Request 1",
        "folder" : false,
        "request" : {
          "method" : "POST",
          "url" : {
            "raw" : "https://apigw.istrbc.com",
            "protocol" : "https",
            "host" : [ "apigw", "istrbc", "com" ]
          }
        }
      } ]
    } ]
  }, {
    "name" : "Test Suites",
    "folder" : true,
    "item" : [ {
      "name" : "LibraryFunctions",
      "folder" : true,
      "item" : [ {
        "name" : "SetupScriptLibrary",
        "folder" : true,
        "item" : [ {
          "name" : "SetupScriptLibrary_Scripts",
          "folder" : false,
          "request" : {
            "method" : "GET",
            "url" : {
              "raw" : "https://example.com",
              "protocol" : "https",
              "host" : [ "example", "com" ]
            }
          },
          "event" : [ {
            "listen" : "prerequest",
            "script" : {
              "exec" : [ "// Import script libraries", "// Include FunctionLibrary", "let FunctionLibrary = pm.collectionVariables.get(\"FunctionLibrary\");", "if (FunctionLibrary !== null) {", "    FunctionLibrary = JSON.parse(FunctionLibrary);", "}", "", "// From test step: SetupScriptLibrary", "// Pre-request Script", "(async function() {", "pm.testCase.testSuite.project.scriptLibrary = pm.testCase.testSuite.project.getScriptLibrary()", "})();" ],
              "type" : "text/javascript"
            }
          } ]
        } ]
      }, {
        "name" : "TestTemplate",
        "folder" : true,
        "item" : [ {
          "name" : "TestTemplate_Scripts",
          "folder" : false,
          "request" : {
            "method" : "GET",
            "url" : {
              "raw" : "https://example.com",
              "protocol" : "https",
              "host" : [ "example", "com" ]
            }
          },
          "event" : [ {
            "listen" : "prerequest",
            "script" : {
              "exec" : [ "// Import script libraries", "// Include FunctionLibrary", "let FunctionLibrary = pm.collectionVariables.get(\"FunctionLibrary\");", "if (FunctionLibrary !== null) {", "    FunctionLibrary = JSON.parse(FunctionLibrary);", "}" ],
              "type" : "text/javascript"
            }
          } ]
        } ]
      } ]
    }, {
      "name" : "CashbackAndSaving",
      "folder" : true,
      "item" : [ {
        "name" : "TC_01_TestCashbackAndSaving_2000k",
        "folder" : true,
        "item" : [ {
          "name" : "summary",
          "folder" : false,
          "request" : {
            "method" : "GET",
            "url" : {
              "raw" : "https://mobile.sterbcroyalbank.com",
              "protocol" : "https",
              "host" : [ "mobile", "sterbcroyalbank", "com" ]
            }
          },
          "event" : [ {
            "listen" : "prerequest",
            "script" : {
              "exec" : [ "// Import script libraries", "// Include FunctionLibrary", "let FunctionLibrary = pm.collectionVariables.get(\"FunctionLibrary\");", "if (FunctionLibrary !== null) {", "    FunctionLibrary = JSON.parse(FunctionLibrary);", "}", "", "// From properties step: InputData", "// Properties from step: InputData", "pm.variables.set(\"CardNumber\", \"4519821569835616\");", "pm.variables.set(\"env\", \"UAT\");", "", "", "// From test step: InSetup", "// WARNING: The following imports are not supported in Postman:", "", "// Pre-request Script", "(async function() {", "// import com.eviware.soapui.support.types.StringToStringMap let env = pm.testCase.testSuite.project.getPropertyValue(\"env\") let RT = JSON.parse(pm.collectionVariables.get('FunctionLibrary')) let fileStream = RT.CreateLogFile(\"\", pm.testCase.testSuite.project.getPropertyValue(\"LogFileName\")) let cardNumber = pm.context.expand('\" + #Project#CardNumber + \"') let testSessionID = RT.SignInAvion(cardNumber, env) // Check if SignIn passed pm.expect(RT.TestCaseFailureCheck(pm.testCase.testSuite.project.testSuites[\"LibraryFunctions\"].testCases[\"SetupScriptLibrary\"]) == true pm.testCase.testSuite.project.setPropertyValue(\"JSESSIONID\", testSessionID) let headers = new StringToStringMap() let testSteps = pm.context.testCase.getTestStepList() testSteps.forEach(function( if (it.config.type == \"restrequest\" && !(it.name in [\"Signin\", \"pvqvalidation\", \"WIM\"])) { // Set headers headers.put(\"Cookie\", testSessionID) headers.put(\"Content-Type\", \"application/xml\") it.httpRequest.setRequestHeaders(headers) // Set the endpoint RT.SetEndpoint(it) } } // Clear header information headers.clear()).to.be.true", "})();" ],
              "type" : "text/javascript"
            }
          }, {
            "listen" : "test",
            "script" : {
              "exec" : [ "pm.test(\"Status code is 200\", function() {", "    pm.response.to.have.status(200);", "});", "", "pm.test(\"Status code is 200\", function() {", "    pm.response.to.have.status(200);", "});", "", "// From test step: RunTest", "// Test Script", "pm.test('Test Execution', function() {", "let RT = JSON.parse(pm.collectionVariables.get('FunctionLibrary')) let env = pm.testCase.testSuite.project.getPropertyValue(\"env\") def clientCards def CardNumber def receiverClientCard let testStepResult = \"\" let fileStream = RT.CreateLogFile(\"\", pm.testCase.testSuite.project.getPropertyValue(\"LogFileName\")) // Set environment variable pm.testCase.testSuite.project.setPropertyValue(\"env\", RT.MobiliserEnvType()) // Set the client card based on environment if (RT.MobiliserEnvType() == \"DEV\") { pm.testCase.testSuite.project.setPropertyValue(\"CardNumber\", \"4519022640754669\") } else if (RT.MobiliserEnvType() == \"SIT\") { pm.testCase.testSuite.project.setPropertyValue(\"CardNumber\", \"4519835555858010\") } else if (RT.MobiliserEnvType() == \"UAT\") { pm.testCase.testSuite.project.setPropertyValue(\"CardNumber\", \"4519891586948663\") } let recordResult = \"PASS\" let TSID = \"\"", "});" ],
              "type" : "text/javascript"
            }
          } ]
        } ]
      } ]
    } ]
  } ],
  "variable" : [ {
    "key" : "CardNumber",
    "value" : "4519022640754669",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "pvqAnswer",
    "value" : "",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "mfaToken",
    "value" : "",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "projectPath",
    "value" : "/Users/kargee/createXML/samples/Convert2Postman/clean_xml",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "mobile_app_version_ios",
    "value" : "790",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "JSESSIONID",
    "value" : "JSESSIONID=ESC8BF5BFD9020E5E9D356334D6F7AEF",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "mfaSessionId",
    "value" : "",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "deviceId",
    "value" : "",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "LogFileName",
    "value" : "REGRESSION_LOG",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "AccessToken",
    "value" : "${#Project#mfaAuthToken}",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "requestId",
    "value" : "",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "envType",
    "value" : "DEV",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "mfaAuthToken",
    "value" : "",
    "type" : "string",
    "disabled" : false
  }, {
    "key" : "FunctionLibrary",
    "value" : "{\"type\":\"string\",\"value\":\"// Function Library converted from ReadyAPI Groovy script\\n// This is an automatically generated JavaScript equivalent\\n\\nclass FunctionLibrary {\\n    constructor(log, context, testRunner) {\\n        this.log = log;\\n        this.context = context;\\n        this.testRunner = testRunner;\\n    }\\n\\n    SignInAvion(cardNumber, env) {\\n        try {\\n             log.info \\\"Signing in with card number: ${cardNumber\\n        } catch (error) {\\n            console.error(`Error in SignInAvion: ${error.message}`);\\n            throw error;\\n        }\\n    }\\n\\n    MobiliserEnvType() {\\n        try {\\n             return \\\"DEV\\\" \\n        } catch (error) {\\n            console.error(`Error in MobiliserEnvType: ${error.message}`);\\n            throw error;\\n        }\\n    }\\n\\n    SetEndpoint(testStep) {\\n        try {\\n             testStep.testRequest.endpoint = \\\"https://mobile.sterbcroyalbank.com\\\" \\n        } catch (error) {\\n            console.error(`Error in SetEndpoint: ${error.message}`);\\n            throw error;\\n        }\\n    }\\n\\n    TestCaseFailureCheck(testCase) {\\n        try {\\n             return true \\n        } catch (error) {\\n            console.error(`Error in TestCaseFailureCheck: ${error.message}`);\\n            throw error;\\n        }\\n    }\\n\\n    CreateLogFile(requestedFileName, existingFile = null) {\\n        try {\\n             def fileName if (existingFile != null && existingFile != \\\"\\\") { fileName = existingFile \\n        } catch (error) {\\n            console.error(`Error in CreateLogFile: ${error.message}`);\\n            throw error;\\n        }\\n    }\\n\\n}\\n\\n// Initialize the function library\\nconst functionLibrary = new FunctionLibrary(\\n    console, // log\\n    pm.variables, // context\\n    pm.testRunner // testRunner\\n);\\n\\n// Export the library for use in other scripts\\npm.functionLibrary = functionLibrary;\\n\",\"key\":\"FunctionLibrary\",\"enabled\":true}",
    "type" : "string",
    "disabled" : false
  } ]
}